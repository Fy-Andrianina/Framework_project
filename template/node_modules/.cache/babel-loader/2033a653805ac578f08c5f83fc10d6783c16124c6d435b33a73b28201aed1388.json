{"ast":null,"code":"import axios from 'axios';\nimport LayoutDiv from '../LayoutDiv.vue';\nimport Swal from 'sweetalert2';\nexport default {\n  name: 'LivreShow',\n  components: {\n    LayoutDiv\n  },\n  data() {\n    return {\n      project: {\n        id: '',\n        label: '',\n        auteur: '',\n        editeur: '',\n        datePublication: ''\n      },\n      isSaving: false\n    };\n  },\n  created() {\n    // prends la valeur de l'id specifie dans l'url /api/:id\n    const id = this.$route.params.id;\n    axios.get(`/Biblio/readByIdlivre.do?id=${id}`).then(response => {\n      let projectInfo = response.data.o[0];\n      this.project.id = projectInfo.id;\n      this.project.label = projectInfo.label;\n      this.project.auteur = projectInfo.auteur;\n      this.project.editeur = projectInfo.editeur;\n      this.project.datePublication = projectInfo.datePublication;\n      return response;\n    }).catch(error => {\n      Swal.fire({\n        icon: 'error',\n        title: 'An Error Occured!',\n        showConfirmButton: false,\n        timer: 1500\n      });\n      return error;\n    });\n  },\n  methods: {}\n};","map":{"version":3,"names":["axios","LayoutDiv","Swal","name","components","data","project","id","label","auteur","editeur","datePublication","isSaving","created","$route","params","get","then","response","projectInfo","o","catch","error","fire","icon","title","showConfirmButton","timer","methods"],"sources":["D:\\GenesisV2_Framework_Psql\\template\\src\\components\\pages\\LivreShow.vue"],"sourcesContent":["<template>\r\n    <layout-div>\r\n         <h2 class=\"text-center mt-5 mb-3\">Show Project</h2>\r\n         <div class=\"card\">\r\n             <div class=\"card-header\">\r\n                 <router-link \r\n                     class=\"btn btn-outline-info float-right\"\r\n                     to=\"/\">View All Projects\r\n                 </router-link>\r\n             </div>\r\n             <div class=\"card-body\">\r\n                 <b className=\"text-muted\">Name:</b>\r\n                // #dataParagraph#\r\n                <b className=\"text-muted\">id:</b>\r\n<p>{{project.id}}</p>\n\t\t<b className=\"text-muted\">label:</b>\r\n<p>{{project.label}}</p>\n\t\t<b className=\"text-muted\">auteur:</b>\r\n<p>{{project.auteur}}</p>\n\t\t<b className=\"text-muted\">editeur:</b>\r\n<p>{{project.editeur}}</p>\n\t\t<b className=\"text-muted\">datePublication:</b>\r\n<p>{{project.datePublication}}</p>\n\t\t\r\n             </div>\r\n         </div>\r\n    </layout-div>\r\n </template>\r\n  \r\n<script>\r\n \nimport  axios from 'axios';\n\nimport   LayoutDiv from '../LayoutDiv.vue';\n\nimport   Swal from 'sweetalert2';\n\r\n  \r\n export default {\r\n   name: 'LivreShow',\r\n   components: {\r\n     LayoutDiv,\r\n   },\r\n   data() {\r\n     return {\r\n       project: {\r\n        id: '',\n\t\tlabel: '',\n\t\tauteur: '',\n\t\tediteur: '',\n\t\tdatePublication: '',\n\t\t\r\n       },\r\n       isSaving:false,\r\n     };\r\n   },\r\n   created() {\r\n         // prends la valeur de l'id specifie dans l'url /api/:id\r\n     const id = this.$route.params.id;\r\n     \r\n     axios.get(`/Biblio/readByIdlivre.do?id=${id}`)\r\n     .then(response => {\r\n         let projectInfo = response.data.o[0]\r\n         this.project.id = projectInfo.id\n\t\tthis.project.label = projectInfo.label\n\t\tthis.project.auteur = projectInfo.auteur\n\t\tthis.project.editeur = projectInfo.editeur\n\t\tthis.project.datePublication = projectInfo.datePublication\n\t\t\r\n         return response\r\n     })\r\n     .catch(error => {\r\n         Swal.fire({\r\n             icon: 'error',\r\n             title: 'An Error Occured!',\r\n             showConfirmButton: false,\r\n             timer: 1500\r\n         })\r\n         return error\r\n     })\r\n   },\r\n   methods: {\r\n      \r\n   },\r\n };\r\n </script>"],"mappings":"AA+BA,OAAQA,KAAI,MAAO,OAAO;AAE1B,OAASC,SAAQ,MAAO,kBAAkB;AAE1C,OAASC,IAAG,MAAO,aAAa;AAG/B,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVH;EACF,CAAC;EACDI,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACRC,EAAE,EAAE,EAAE;QACZC,KAAK,EAAE,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,EAAE;QACXC,eAAe,EAAE;MAEZ,CAAC;MACDC,QAAQ,EAAC;IACX,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACJ;IACJ,MAAMN,EAAC,GAAI,IAAI,CAACO,MAAM,CAACC,MAAM,CAACR,EAAE;IAEhCP,KAAK,CAACgB,GAAG,CAAE,+BAA8BT,EAAG,EAAC,EAC5CU,IAAI,CAACC,QAAO,IAAK;MACd,IAAIC,WAAU,GAAID,QAAQ,CAACb,IAAI,CAACe,CAAC,CAAC,CAAC;MACnC,IAAI,CAACd,OAAO,CAACC,EAAC,GAAIY,WAAW,CAACZ,EAAC;MACtC,IAAI,CAACD,OAAO,CAACE,KAAI,GAAIW,WAAW,CAACX,KAAI;MACrC,IAAI,CAACF,OAAO,CAACG,MAAK,GAAIU,WAAW,CAACV,MAAK;MACvC,IAAI,CAACH,OAAO,CAACI,OAAM,GAAIS,WAAW,CAACT,OAAM;MACzC,IAAI,CAACJ,OAAO,CAACK,eAAc,GAAIQ,WAAW,CAACR,eAAc;MAElD,OAAOO,QAAO;IAClB,CAAC,EACAG,KAAK,CAACC,KAAI,IAAK;MACZpB,IAAI,CAACqB,IAAI,CAAC;QACNC,IAAI,EAAE,OAAO;QACbC,KAAK,EAAE,mBAAmB;QAC1BC,iBAAiB,EAAE,KAAK;QACxBC,KAAK,EAAE;MACX,CAAC;MACD,OAAOL,KAAI;IACf,CAAC;EACH,CAAC;EACDM,OAAO,EAAE,CAET;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}